/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;

@utility pointer-events-auto {
  pointer-events: auto;
}
@utility pointer-events-none {
  pointer-events: none;
}
@utility collapse {
  visibility: collapse;
}
@utility invisible {
  visibility: hidden;
}
@utility visible {
  visibility: visible;
}
@utility sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
@utility not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}
@utility absolute {
  position: absolute;
}
@utility fixed {
  position: fixed;
}
@utility relative {
  position: relative;
}
@utility relative! {
  position: relative !important;
}
@utility static {
  position: static;
}
@utility sticky {
  position: sticky;
}
@utility isolate {
  isolation: isolate;
}
@utility isolation-auto {
  isolation: auto;
}
@utility float-end {
  float: inline-end;
}
@utility float-left {
  float: left;
}
@utility float-none {
  float: none;
}
@utility float-right {
  float: right;
}
@utility float-start {
  float: inline-start;
}
@utility clear-both {
  clear: both;
}
@utility clear-end {
  clear: inline-end;
}
@utility clear-left {
  clear: left;
}
@utility clear-none {
  clear: none;
}
@utility clear-right {
  clear: right;
}
@utility clear-start {
  clear: inline-start;
}
@utility container {
  width: 100%;
  @media (width >= 40rem) {
    max-width: 40rem;
  }
  @media (width >= 48rem) {
    max-width: 48rem;
  }
  @media (width >= 64rem) {
    max-width: 64rem;
  }
  @media (width >= 80rem) {
    max-width: 80rem;
  }
  @media (width >= 96rem) {
    max-width: 96rem;
  }
}
@utility prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
  :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  :where([class~='lead']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
  }
  :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  :where(a strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }
  :where(blockquote strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }
  :where(thead th strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }
  :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }
  :where(ol[type='A']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-alpha;
  }
  :where(ol[type='a']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-alpha;
  }
  :where(ol[type='A' s]):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-alpha;
  }
  :where(ol[type='a' s]):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-alpha;
  }
  :where(ol[type='I']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-roman;
  }
  :where(ol[type='i']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-roman;
  }
  :where(ol[type='I' s]):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-roman;
  }
  :where(ol[type='i' s]):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-roman;
  }
  :where(ol[type='1']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: decimal;
  }
  :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }
  :where(ol > li):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::marker {
    font-weight: 400;
    color: var(--tw-prose-counters);
  }
  :where(ul > li):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::marker {
    color: var(--tw-prose-bullets);
  }
  :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em;
  }
  :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-inline-start-width: 0.25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: '\201C' '\201D' '\2018' '\2019';
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
  }
  :where(blockquote p:first-of-type):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::before {
    content: open-quote;
  }
  :where(blockquote p:last-of-type):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::after {
    content: close-quote;
  }
  :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }
  :where(h1 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: 900;
    color: inherit;
  }
  :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }
  :where(h2 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: 800;
    color: inherit;
  }
  :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  :where(h3 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: 700;
    color: inherit;
  }
  :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }
  :where(h4 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: 700;
    color: inherit;
  }
  :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em;
  }
  :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: 500;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    box-shadow:
      0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
      0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
    font-size: 0.875em;
    border-radius: 0.3125rem;
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    padding-inline-start: 0.375em;
  }
  :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: 0.875em;
  }
  :where(code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::before {
    content: '`';
  }
  :where(code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::after {
    content: '`';
  }
  :where(a code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }
  :where(h1 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }
  :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.875em;
  }
  :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.9em;
  }
  :where(h4 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }
  :where(blockquote code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }
  :where(thead th code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }
  :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-inline-start: 1.1428571em;
  }
  :where(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  :where(pre code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::before {
    content: none;
  }
  :where(pre code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::after {
    content: none;
  }
  :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    width: 100%;
    table-layout: auto;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }
  :where(thead):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }
  :where(tbody tr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  :where(tbody tr:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    border-bottom-width: 0;
  }
  :where(tbody td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    vertical-align: baseline;
  }
  :where(tfoot):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  :where(tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    vertical-align: top;
  }
  :where(th, td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    text-align: start;
  }
  :where(figure > *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }
  :where(figcaption):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }
  --tw-prose-body: oklch(37.3% 0.034 259.733);
  --tw-prose-headings: oklch(21% 0.034 264.665);
  --tw-prose-lead: oklch(44.6% 0.03 256.802);
  --tw-prose-links: oklch(21% 0.034 264.665);
  --tw-prose-bold: oklch(21% 0.034 264.665);
  --tw-prose-counters: oklch(55.1% 0.027 264.364);
  --tw-prose-bullets: oklch(87.2% 0.01 258.338);
  --tw-prose-hr: oklch(92.8% 0.006 264.531);
  --tw-prose-quotes: oklch(21% 0.034 264.665);
  --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
  --tw-prose-captions: oklch(55.1% 0.027 264.364);
  --tw-prose-kbd: oklch(21% 0.034 264.665);
  --tw-prose-kbd-shadows: NaN NaN NaN;
  --tw-prose-code: oklch(21% 0.034 264.665);
  --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
  --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
  --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
  --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
  --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
  --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
  --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
  --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
  --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
  --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
  --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
  font-size: 1rem;
  line-height: 1.75;
  :where(picture > img):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.375em;
  }
  :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.375em;
  }
  :where(.prose > ul > li p):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  :where(.prose > ul > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.25em;
  }
  :where(.prose > ul > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.25em;
  }
  :where(.prose > ol > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.25em;
  }
  :where(.prose > ol > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.25em;
  }
  :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }
  :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  :where(thead th:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }
  :where(thead th:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }
  :where(tbody td, tfoot td):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-top: 0.5714286em;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }
  :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }
  :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }
  :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  :where(.prose > :first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
  }
  :where(.prose > :last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 0;
  }
}
@utility box-border {
  box-sizing: border-box;
}
@utility box-content {
  box-sizing: content-box;
}
@utility line-clamp-none {
  overflow: visible;
  display: block;
  -webkit-box-orient: horizontal;
  -webkit-line-clamp: unset;
}
@utility block {
  display: block;
}
@utility contents {
  display: contents;
}
@utility flex {
  display: flex;
}
@utility flow-root {
  display: flow-root;
}
@utility grid {
  display: grid;
}
@utility grid! {
  display: grid !important;
}
@utility hidden {
  display: none;
}
@utility inline {
  display: inline;
}
@utility inline-block {
  display: inline-block;
}
@utility inline-flex {
  display: inline-flex;
}
@utility inline-grid {
  display: inline-grid;
}
@utility inline-table {
  display: inline-table;
}
@utility list-item {
  display: list-item;
}
@utility table {
  display: table;
}
@utility table-caption {
  display: table-caption;
}
@utility table-cell {
  display: table-cell;
}
@utility table-column {
  display: table-column;
}
@utility table-column-group {
  display: table-column-group;
}
@utility table-footer-group {
  display: table-footer-group;
}
@utility table-header-group {
  display: table-header-group;
}
@utility table-row {
  display: table-row;
}
@utility table-row-group {
  display: table-row-group;
}
@utility flex-shrink {
  flex-shrink: 1;
}
@utility shrink {
  flex-shrink: 1;
}
@utility flex-grow {
  flex-grow: 1;
}
@utility grow {
  flex-grow: 1;
}
@utility table-auto {
  table-layout: auto;
}
@utility table-fixed {
  table-layout: fixed;
}
@utility caption-bottom {
  caption-side: bottom;
}
@utility caption-top {
  caption-side: top;
}
@utility border-collapse {
  border-collapse: collapse;
}
@utility border-separate {
  border-collapse: separate;
}
@utility transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,)
    var(--tw-skew-x,) var(--tw-skew-y,);
}
@utility transform-cpu {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,)
    var(--tw-skew-x,) var(--tw-skew-y,);
}
@utility transform-gpu {
  transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,)
    var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
@utility transform-none {
  transform: none;
}
@utility touch-pan-left {
  --tw-pan-x: pan-left;
  touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
}
@utility touch-pan-right {
  --tw-pan-x: pan-right;
  touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
}
@utility touch-pan-x {
  --tw-pan-x: pan-x;
  touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
}
@utility touch-pan-down {
  --tw-pan-y: pan-down;
  touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
}
@utility touch-pan-up {
  --tw-pan-y: pan-up;
  touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
}
@utility touch-pan-y {
  --tw-pan-y: pan-y;
  touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
}
@utility touch-pinch-zoom {
  --tw-pinch-zoom: pinch-zoom;
  touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
}
@utility touch-auto {
  touch-action: auto;
}
@utility touch-manipulation {
  touch-action: manipulation;
}
@utility touch-none {
  touch-action: none;
}
@utility resize {
  resize: both;
}
@utility resize-none {
  resize: none;
}
@utility resize-x {
  resize: horizontal;
}
@utility resize-y {
  resize: vertical;
}
@utility snap-both {
  scroll-snap-type: both var(--tw-scroll-snap-strictness);
}
@utility snap-none {
  scroll-snap-type: none;
}
@utility snap-x {
  scroll-snap-type: x var(--tw-scroll-snap-strictness);
}
@utility snap-y {
  scroll-snap-type: y var(--tw-scroll-snap-strictness);
}
@utility snap-mandatory {
  --tw-scroll-snap-strictness: mandatory;
}
@utility snap-proximity {
  --tw-scroll-snap-strictness: proximity;
}
@utility snap-align-none {
  scroll-snap-align: none;
}
@utility snap-center {
  scroll-snap-align: center;
}
@utility snap-end {
  scroll-snap-align: end;
}
@utility snap-start {
  scroll-snap-align: start;
}
@utility snap-always {
  scroll-snap-stop: always;
}
@utility snap-normal {
  scroll-snap-stop: normal;
}
@utility list-inside {
  list-style-position: inside;
}
@utility list-outside {
  list-style-position: outside;
}
@utility appearance-auto {
  appearance: auto;
}
@utility appearance-none {
  appearance: none;
}
@utility break-before-all {
  break-before: all;
}
@utility break-before-auto {
  break-before: auto;
}
@utility break-before-avoid {
  break-before: avoid;
}
@utility break-before-avoid-page {
  break-before: avoid-page;
}
@utility break-before-column {
  break-before: column;
}
@utility break-before-left {
  break-before: left;
}
@utility break-before-page {
  break-before: page;
}
@utility break-before-right {
  break-before: right;
}
@utility break-inside-auto {
  break-inside: auto;
}
@utility break-inside-avoid {
  break-inside: avoid;
}
@utility break-inside-avoid-column {
  break-inside: avoid-column;
}
@utility break-inside-avoid-page {
  break-inside: avoid-page;
}
@utility break-after-all {
  break-after: all;
}
@utility break-after-auto {
  break-after: auto;
}
@utility break-after-avoid {
  break-after: avoid;
}
@utility break-after-avoid-page {
  break-after: avoid-page;
}
@utility break-after-column {
  break-after: column;
}
@utility break-after-left {
  break-after: left;
}
@utility break-after-page {
  break-after: page;
}
@utility break-after-right {
  break-after: right;
}
@utility grid-flow-col {
  grid-auto-flow: column;
}
@utility grid-flow-col-dense {
  grid-auto-flow: column dense;
}
@utility grid-flow-dense {
  grid-auto-flow: dense;
}
@utility grid-flow-row {
  grid-auto-flow: row;
}
@utility grid-flow-row-dense {
  grid-auto-flow: row dense;
}
@utility flex-col {
  flex-direction: column;
}
@utility flex-col-reverse {
  flex-direction: column-reverse;
}
@utility flex-row {
  flex-direction: row;
}
@utility flex-row-reverse {
  flex-direction: row-reverse;
}
@utility flex-nowrap {
  flex-wrap: nowrap;
}
@utility flex-wrap {
  flex-wrap: wrap;
}
@utility flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}
@utility place-content-around {
  place-content: space-around;
}
@utility place-content-baseline {
  place-content: baseline;
}
@utility place-content-between {
  place-content: space-between;
}
@utility place-content-center {
  place-content: center;
}
@utility place-content-end {
  place-content: end;
}
@utility place-content-evenly {
  place-content: space-evenly;
}
@utility place-content-start {
  place-content: start;
}
@utility place-content-stretch {
  place-content: stretch;
}
@utility place-items-baseline {
  place-items: baseline;
}
@utility place-items-center {
  place-items: center;
}
@utility place-items-end {
  place-items: end;
}
@utility place-items-start {
  place-items: start;
}
@utility place-items-stretch {
  place-items: stretch;
}
@utility content-around {
  align-content: space-around;
}
@utility content-baseline {
  align-content: baseline;
}
@utility content-between {
  align-content: space-between;
}
@utility content-center {
  align-content: center;
}
@utility content-end {
  align-content: flex-end;
}
@utility content-evenly {
  align-content: space-evenly;
}
@utility content-normal {
  align-content: normal;
}
@utility content-start {
  align-content: flex-start;
}
@utility content-stretch {
  align-content: stretch;
}
@utility items-baseline {
  align-items: baseline;
}
@utility items-center {
  align-items: center;
}
@utility items-end {
  align-items: flex-end;
}
@utility items-start {
  align-items: flex-start;
}
@utility items-stretch {
  align-items: stretch;
}
@utility justify-around {
  justify-content: space-around;
}
@utility justify-between {
  justify-content: space-between;
}
@utility justify-center {
  justify-content: center;
}
@utility justify-end {
  justify-content: flex-end;
}
@utility justify-evenly {
  justify-content: space-evenly;
}
@utility justify-normal {
  justify-content: normal;
}
@utility justify-start {
  justify-content: flex-start;
}
@utility justify-stretch {
  justify-content: stretch;
}
@utility justify-items-center {
  justify-items: center;
}
@utility justify-items-end {
  justify-items: end;
}
@utility justify-items-start {
  justify-items: start;
}
@utility justify-items-stretch {
  justify-items: stretch;
}
@utility space-y-reverse {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 1;
  }
}
@utility space-x-reverse {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 1;
  }
}
@utility divide-x {
  :where(& > :not(:last-child)) {
    --tw-divide-x-reverse: 0;
    border-inline-style: var(--tw-border-style);
    border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
    border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
  }
}
@utility divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
@utility divide-y-reverse {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 1;
  }
}
@utility divide-dashed {
  :where(& > :not(:last-child)) {
    --tw-border-style: dashed;
    border-style: dashed;
  }
}
@utility divide-dotted {
  :where(& > :not(:last-child)) {
    --tw-border-style: dotted;
    border-style: dotted;
  }
}
@utility divide-double {
  :where(& > :not(:last-child)) {
    --tw-border-style: double;
    border-style: double;
  }
}
@utility divide-none {
  :where(& > :not(:last-child)) {
    --tw-border-style: none;
    border-style: none;
  }
}
@utility divide-solid {
  :where(& > :not(:last-child)) {
    --tw-border-style: solid;
    border-style: solid;
  }
}
@utility place-self-auto {
  place-self: auto;
}
@utility place-self-center {
  place-self: center;
}
@utility place-self-end {
  place-self: end;
}
@utility place-self-start {
  place-self: start;
}
@utility place-self-stretch {
  place-self: stretch;
}
@utility self-auto {
  align-self: auto;
}
@utility self-baseline {
  align-self: baseline;
}
@utility self-center {
  align-self: center;
}
@utility self-end {
  align-self: flex-end;
}
@utility self-start {
  align-self: flex-start;
}
@utility self-stretch {
  align-self: stretch;
}
@utility justify-self-auto {
  justify-self: auto;
}
@utility justify-self-center {
  justify-self: center;
}
@utility justify-self-end {
  justify-self: flex-end;
}
@utility justify-self-start {
  justify-self: flex-start;
}
@utility justify-self-stretch {
  justify-self: stretch;
}
@utility truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@utility overflow-auto {
  overflow: auto;
}
@utility overflow-clip {
  overflow: clip;
}
@utility overflow-hidden {
  overflow: hidden;
}
@utility overflow-scroll {
  overflow: scroll;
}
@utility overflow-visible {
  overflow: visible;
}
@utility overflow-x-auto {
  overflow-x: auto;
}
@utility overflow-x-clip {
  overflow-x: clip;
}
@utility overflow-x-hidden {
  overflow-x: hidden;
}
@utility overflow-x-scroll {
  overflow-x: scroll;
}
@utility overflow-x-visible {
  overflow-x: visible;
}
@utility overflow-y-auto {
  overflow-y: auto;
}
@utility overflow-y-clip {
  overflow-y: clip;
}
@utility overflow-y-hidden {
  overflow-y: hidden;
}
@utility overflow-y-scroll {
  overflow-y: scroll;
}
@utility overflow-y-visible {
  overflow-y: visible;
}
@utility overscroll-auto {
  overscroll-behavior: auto;
}
@utility overscroll-contain {
  overscroll-behavior: contain;
}
@utility overscroll-none {
  overscroll-behavior: none;
}
@utility overscroll-x-auto {
  overscroll-behavior-x: auto;
}
@utility overscroll-x-contain {
  overscroll-behavior-x: contain;
}
@utility overscroll-x-none {
  overscroll-behavior-x: none;
}
@utility overscroll-y-auto {
  overscroll-behavior-y: auto;
}
@utility overscroll-y-contain {
  overscroll-behavior-y: contain;
}
@utility overscroll-y-none {
  overscroll-behavior-y: none;
}
@utility scroll-auto {
  scroll-behavior: auto;
}
@utility scroll-smooth {
  scroll-behavior: smooth;
}
@utility rounded {
  border-radius: 0.25rem;
}
@utility rounded-s {
  border-start-start-radius: 0.25rem;
  border-end-start-radius: 0.25rem;
}
@utility rounded-ss {
  border-start-start-radius: 0.25rem;
}
@utility rounded-e {
  border-start-end-radius: 0.25rem;
  border-end-end-radius: 0.25rem;
}
@utility rounded-se {
  border-start-end-radius: 0.25rem;
}
@utility rounded-ee {
  border-end-end-radius: 0.25rem;
}
@utility rounded-es {
  border-end-start-radius: 0.25rem;
}
@utility rounded-t {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}
@utility rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}
@utility rounded-tl {
  border-top-left-radius: 0.25rem;
}
@utility rounded-r {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}
@utility rounded-tr {
  border-top-right-radius: 0.25rem;
}
@utility rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}
@utility rounded-br {
  border-bottom-right-radius: 0.25rem;
}
@utility rounded-bl {
  border-bottom-left-radius: 0.25rem;
}
@utility border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
@utility border-x {
  border-inline-style: var(--tw-border-style);
  border-inline-width: 1px;
}
@utility border-y {
  border-block-style: var(--tw-border-style);
  border-block-width: 1px;
}
@utility border-s {
  border-inline-start-style: var(--tw-border-style);
  border-inline-start-width: 1px;
}
@utility border-e {
  border-inline-end-style: var(--tw-border-style);
  border-inline-end-width: 1px;
}
@utility border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
@utility border-r {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
}
@utility border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
@utility border-l {
  border-left-style: var(--tw-border-style);
  border-left-width: 1px;
}
@utility border-dashed {
  --tw-border-style: dashed;
  border-style: dashed;
}
@utility border-dotted {
  --tw-border-style: dotted;
  border-style: dotted;
}
@utility border-double {
  --tw-border-style: double;
  border-style: double;
}
@utility border-hidden {
  --tw-border-style: hidden;
  border-style: hidden;
}
@utility border-none {
  --tw-border-style: none;
  border-style: none;
}
@utility border-solid {
  --tw-border-style: solid;
  border-style: solid;
}
@utility box-decoration-clone {
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}
@utility box-decoration-slice {
  -webkit-box-decoration-break: slice;
  box-decoration-break: slice;
}
@utility decoration-clone {
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}
@utility decoration-slice {
  -webkit-box-decoration-break: slice;
  box-decoration-break: slice;
}
@utility bg-fixed {
  background-attachment: fixed;
}
@utility bg-local {
  background-attachment: local;
}
@utility bg-scroll {
  background-attachment: scroll;
}
@utility bg-clip-border {
  background-clip: border-box;
}
@utility bg-clip-content {
  background-clip: content-box;
}
@utility bg-clip-padding {
  background-clip: padding-box;
}
@utility bg-clip-text {
  background-clip: text;
}
@utility bg-no-repeat {
  background-repeat: no-repeat;
}
@utility bg-repeat {
  background-repeat: repeat;
}
@utility bg-repeat-round {
  background-repeat: round;
}
@utility bg-repeat-space {
  background-repeat: space;
}
@utility bg-repeat-x {
  background-repeat: repeat-x;
}
@utility bg-repeat-y {
  background-repeat: repeat-y;
}
@utility bg-origin-border {
  background-origin: border-box;
}
@utility bg-origin-content {
  background-origin: content-box;
}
@utility bg-origin-padding {
  background-origin: padding-box;
}
@utility mask-repeat {
  mask-repeat: repeat;
}
@utility object-contain {
  object-fit: contain;
}
@utility object-cover {
  object-fit: cover;
}
@utility object-fill {
  object-fit: fill;
}
@utility object-none {
  object-fit: none;
}
@utility object-scale-down {
  object-fit: scale-down;
}
@utility text-center {
  text-align: center;
}
@utility text-end {
  text-align: end;
}
@utility text-justify {
  text-align: justify;
}
@utility text-left {
  text-align: left;
}
@utility text-right {
  text-align: right;
}
@utility text-start {
  text-align: start;
}
@utility align-baseline {
  vertical-align: baseline;
}
@utility align-bottom {
  vertical-align: bottom;
}
@utility align-middle {
  vertical-align: middle;
}
@utility align-sub {
  vertical-align: sub;
}
@utility align-super {
  vertical-align: super;
}
@utility align-text-bottom {
  vertical-align: text-bottom;
}
@utility align-text-top {
  vertical-align: text-top;
}
@utility align-top {
  vertical-align: top;
}
@utility text-balance {
  text-wrap: balance;
}
@utility text-nowrap {
  text-wrap: nowrap;
}
@utility text-pretty {
  text-wrap: pretty;
}
@utility text-wrap {
  text-wrap: wrap;
}
@utility break-normal {
  overflow-wrap: normal;
  word-break: normal;
}
@utility break-words {
  overflow-wrap: break-word;
}
@utility break-all {
  word-break: break-all;
}
@utility break-keep {
  word-break: keep-all;
}
@utility overflow-ellipsis {
  text-overflow: ellipsis;
}
@utility text-clip {
  text-overflow: clip;
}
@utility text-ellipsis {
  text-overflow: ellipsis;
}
@utility hyphens-auto {
  -webkit-hyphens: auto;
  hyphens: auto;
}
@utility hyphens-manual {
  -webkit-hyphens: manual;
  hyphens: manual;
}
@utility hyphens-none {
  -webkit-hyphens: none;
  hyphens: none;
}
@utility whitespace-break-spaces {
  white-space: break-spaces;
}
@utility whitespace-normal {
  white-space: normal;
}
@utility whitespace-nowrap {
  white-space: nowrap;
}
@utility whitespace-pre {
  white-space: pre;
}
@utility whitespace-pre-line {
  white-space: pre-line;
}
@utility whitespace-pre-wrap {
  white-space: pre-wrap;
}
@utility capitalize {
  text-transform: capitalize;
}
@utility lowercase {
  text-transform: lowercase;
}
@utility normal-case {
  text-transform: none;
}
@utility uppercase {
  text-transform: uppercase;
}
@utility italic {
  font-style: italic;
}
@utility not-italic {
  font-style: normal;
}
@utility diagonal-fractions {
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
    var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
    var(--tw-numeric-fraction,);
}
@utility lining-nums {
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
    var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
    var(--tw-numeric-fraction,);
}
@utility oldstyle-nums {
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
    var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
    var(--tw-numeric-fraction,);
}
@utility ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
    var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
    var(--tw-numeric-fraction,);
}
@utility proportional-nums {
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
    var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
    var(--tw-numeric-fraction,);
}
@utility slashed-zero {
  --tw-slashed-zero: slashed-zero;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
    var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
    var(--tw-numeric-fraction,);
}
@utility stacked-fractions {
  --tw-numeric-fraction: stacked-fractions;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
    var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
    var(--tw-numeric-fraction,);
}
@utility tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
    var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
    var(--tw-numeric-fraction,);
}
@utility normal-nums {
  font-variant-numeric: normal;
}
@utility line-through {
  text-decoration-line: line-through;
}
@utility no-underline {
  text-decoration-line: none;
}
@utility overline {
  text-decoration-line: overline;
}
@utility underline {
  text-decoration-line: underline;
}
@utility decoration-dashed {
  text-decoration-style: dashed;
}
@utility decoration-dotted {
  text-decoration-style: dotted;
}
@utility decoration-double {
  text-decoration-style: double;
}
@utility decoration-solid {
  text-decoration-style: solid;
}
@utility decoration-wavy {
  text-decoration-style: wavy;
}
@utility antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
@utility subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}
@utility bg-blend-color {
  background-blend-mode: color;
}
@utility bg-blend-color-burn {
  background-blend-mode: color-burn;
}
@utility bg-blend-color-dodge {
  background-blend-mode: color-dodge;
}
@utility bg-blend-darken {
  background-blend-mode: darken;
}
@utility bg-blend-difference {
  background-blend-mode: difference;
}
@utility bg-blend-exclusion {
  background-blend-mode: exclusion;
}
@utility bg-blend-hard-light {
  background-blend-mode: hard-light;
}
@utility bg-blend-hue {
  background-blend-mode: hue;
}
@utility bg-blend-lighten {
  background-blend-mode: lighten;
}
@utility bg-blend-luminosity {
  background-blend-mode: luminosity;
}
@utility bg-blend-multiply {
  background-blend-mode: multiply;
}
@utility bg-blend-normal {
  background-blend-mode: normal;
}
@utility bg-blend-overlay {
  background-blend-mode: overlay;
}
@utility bg-blend-saturation {
  background-blend-mode: saturation;
}
@utility bg-blend-screen {
  background-blend-mode: screen;
}
@utility bg-blend-soft-light {
  background-blend-mode: soft-light;
}
@utility mix-blend-color {
  mix-blend-mode: color;
}
@utility mix-blend-color-burn {
  mix-blend-mode: color-burn;
}
@utility mix-blend-color-dodge {
  mix-blend-mode: color-dodge;
}
@utility mix-blend-darken {
  mix-blend-mode: darken;
}
@utility mix-blend-difference {
  mix-blend-mode: difference;
}
@utility mix-blend-exclusion {
  mix-blend-mode: exclusion;
}
@utility mix-blend-hard-light {
  mix-blend-mode: hard-light;
}
@utility mix-blend-hue {
  mix-blend-mode: hue;
}
@utility mix-blend-lighten {
  mix-blend-mode: lighten;
}
@utility mix-blend-luminosity {
  mix-blend-mode: luminosity;
}
@utility mix-blend-multiply {
  mix-blend-mode: multiply;
}
@utility mix-blend-normal {
  mix-blend-mode: normal;
}
@utility mix-blend-overlay {
  mix-blend-mode: overlay;
}
@utility mix-blend-plus-darker {
  mix-blend-mode: plus-darker;
}
@utility mix-blend-plus-lighter {
  mix-blend-mode: plus-lighter;
}
@utility mix-blend-saturation {
  mix-blend-mode: saturation;
}
@utility mix-blend-screen {
  mix-blend-mode: screen;
}
@utility mix-blend-soft-light {
  mix-blend-mode: soft-light;
}
@utility shadow {
  --tw-shadow:
    0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
    0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow:
    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
@utility outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
@utility blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
    var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
    var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
@utility drop-shadow {
  --tw-drop-shadow-size: drop-shadow(
      0 1px 2px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.1))
    )
    drop-shadow(0 1px 1px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.06)));
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1))
    drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
    var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
    var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
@utility grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
    var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
    var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
@utility invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
    var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
    var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
@utility sepia {
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
    var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
    var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
@utility filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
    var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
    var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
@utility filter-none {
  filter: none;
}
@utility backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur,)
    var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
    var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
    var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
    var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
    var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
    var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
    var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
    var(--tw-backdrop-sepia,);
}
@utility backdrop-grayscale {
  --tw-backdrop-grayscale: grayscale(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur,)
    var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
    var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
    var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
    var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
    var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
    var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
    var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
    var(--tw-backdrop-sepia,);
}
@utility backdrop-invert {
  --tw-backdrop-invert: invert(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur,)
    var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
    var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
    var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
    var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
    var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
    var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
    var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
    var(--tw-backdrop-sepia,);
}
@utility backdrop-sepia {
  --tw-backdrop-sepia: sepia(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur,)
    var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
    var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
    var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
    var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
    var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
    var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
    var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
    var(--tw-backdrop-sepia,);
}
@utility backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur,)
    var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
    var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
    var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
    var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
    var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
    var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
    var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
    var(--tw-backdrop-sepia,);
}
@utility backdrop-filter-none {
  -webkit-backdrop-filter: none;
  backdrop-filter: none;
}
@utility transition {
  transition-property:
    color,
    background-color,
    border-color,
    outline-color,
    text-decoration-color,
    fill,
    stroke,
    --tw-gradient-from,
    --tw-gradient-via,
    --tw-gradient-to,
    opacity,
    box-shadow,
    transform,
    translate,
    scale,
    rotate,
    filter,
    -webkit-backdrop-filter,
    backdrop-filter,
    display,
    visibility,
    content-visibility,
    overlay,
    pointer-events;
  transition-timing-function: var(
    --tw-ease,
    var(--default-transition-timing-function)
  );
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
@utility ease-in {
  --tw-ease: var(--ease-in);
  transition-timing-function: var(--ease-in);
}
@utility ease-in-out {
  --tw-ease: var(--ease-in-out);
  transition-timing-function: var(--ease-in-out);
}
@utility ease-out {
  --tw-ease: var(--ease-out);
  transition-timing-function: var(--ease-out);
}
@utility contain-inline-size {
  --tw-contain-size: inline-size;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,)
    var(--tw-contain-paint,) var(--tw-contain-style,);
}
@utility contain-layout {
  --tw-contain-layout: layout;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,)
    var(--tw-contain-paint,) var(--tw-contain-style,);
}
@utility contain-paint {
  --tw-contain-paint: paint;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,)
    var(--tw-contain-paint,) var(--tw-contain-style,);
}
@utility contain-size {
  --tw-contain-size: size;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,)
    var(--tw-contain-paint,) var(--tw-contain-style,);
}
@utility contain-style {
  --tw-contain-style: style;
  contain: var(--tw-contain-size,) var(--tw-contain-layout,)
    var(--tw-contain-paint,) var(--tw-contain-style,);
}
@utility contain-content {
  contain: content;
}
@utility contain-none {
  contain: none;
}
@utility contain-strict {
  contain: strict;
}
@utility forced-color-adjust-auto {
  forced-color-adjust: auto;
}
@utility forced-color-adjust-none {
  forced-color-adjust: none;
}
@utility outline-dashed {
  --tw-outline-style: dashed;
  outline-style: dashed;
}
@utility outline-dotted {
  --tw-outline-style: dotted;
  outline-style: dotted;
}
@utility outline-double {
  --tw-outline-style: double;
  outline-style: double;
}
@utility outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
@utility select-all {
  -webkit-user-select: all;
  user-select: all;
}
@utility select-auto {
  -webkit-user-select: auto;
  user-select: auto;
}
@utility select-none {
  -webkit-user-select: none;
  user-select: none;
}
@utility select-text {
  -webkit-user-select: text;
  user-select: text;
}
@utility divide-x-reverse {
  :where(& > :not(:last-child)) {
    --tw-divide-x-reverse: 1;
  }
}
@utility ring-inset {
  --tw-ring-inset: inset;
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-pan-x {
  syntax: "*";
  inherits: false;
}
@property --tw-pan-y {
  syntax: "*";
  inherits: false;
}
@property --tw-pinch-zoom {
  syntax: "*";
  inherits: false;
}
@property --tw-scroll-snap-strictness {
  syntax: "*";
  inherits: false;
  initial-value: proximity;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-size {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-layout {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-paint {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-style {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-pan-x: initial;
      --tw-pan-y: initial;
      --tw-pinch-zoom: initial;
      --tw-scroll-snap-strictness: proximity;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-x-reverse: 0;
      --tw-border-style: solid;
      --tw-divide-y-reverse: 0;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-ease: initial;
      --tw-contain-size: initial;
      --tw-contain-layout: initial;
      --tw-contain-paint: initial;
      --tw-contain-style: initial;
    }
  }
}
